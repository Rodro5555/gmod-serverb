--[[
This code was generated by LAUX, a Lua transpiler
LAUX is a fork of LAU with additional changes.

More info & source code can be found at: https://gitlab.com/sleeppyy/laux
]]

local ITEM = XeninInventory:CreateItem()
ITEM.V2 = true
ITEM.DROP = 0
ITEM.DROP_AMOUNT = 1
ITEM.DROP_ALL = 2
ITEM.DROPStrings = {
  [ITEM.DROP] = "Drop",
  [ITEM.DROP_AMOUNT] = "Drop Amount",
  [ITEM.DROP_ALL] = "Drop All"
}

ITEM.Hover = "XeninInventory.Hover.V2"

function ITEM:AddEquip(func, check)
  self:AddAction("Equip", 1, function(self, ply, ent, tbl)
    if func then func(self, ply, tbl)end
  end, check)
end

function ITEM:SetHover(str)
  self.Hover = str
end

function ITEM:SetDescription(desc)
  self.Description = desc
end

function ITEM:SetModel(mdl)
  self.Model = mdl
end

function ITEM:SetMaxStack(maxStack)
  self.MaxStack = maxStack
end

function ITEM:SetName(name)
  self.GetName = function(self)
    return name
  end
end

function ITEM:GetSkin(tbl)
  return nil
end

function ITEM:GetBodygroup(tbl)
  return nil, nil
end

function ITEM:GetClientsideModel(tbl, mdlPanel) end

function ITEM:AddUse(func, check)
  self:AddAction("Use", 1, function(self, ply, ent, tbl)
    if func then func(self, ply, tbl)end
  end, check)
end

function ITEM:AddDrop(post, type)
  type = type or ITEM.DROP
  local str = self.DROPStrings[type]

  self:AddAction(str, type == ITEM.DROP and 2 or 3, function(self, ply, ent, tbl)
    local trace = {}
    trace.start = ply:EyePos()
    trace.endpos = trace.start + ply:GetAimVector() * 85
    trace.filter = ply

    local amt = tbl.data.amount or tbl.data.Amount or tbl.amount
    local tr = util.TraceLine(trace)
    local ent = ents.Create(tbl.dropEnt)
    ent:SetPos(tr.HitPos)
    ent:SetModel(self:GetModel(tbl.ent))
    ent:Spawn()

    if post then
      post(self, ply, ent, tbl, tr, amt)
    end
  end)
end

function ITEM:CanStack(newItem, invItem)
  return true
end

function ITEM:GetEntityClass(ent)
  return ent:GetClass()
end

function ITEM:GetDropEntityClass(ent)
  return ent:GetClass()
end

function ITEM:GetEntityAmount(ent)
  return 1
end

function ITEM:OnPickup(ply, ent)
  if (!IsValid(ent)) then return end

  local info = {
    ent = self:GetEntityClass(ent),
    dropEnt = self:GetDropEntityClass(ent),
    amount = self:GetEntityAmount(ent),
    data = self:GetData(ent)
  }

  self:Pickup(ply, ent, info)

  return true
end

function XeninInventory:CreateItemV2()
  return table.Copy(ITEM)
end

if CLIENT then
  local PANEL = {}

  XeninUI:CreateFont("XeninInventory.Hover.Title", 22)
  XeninUI:CreateFont("XeninInventory.Hover.Subtitle", 18)
  XeninUI:CreateFont("XeninInventory.Weapons.Hover.Stats", 16)

  function PANEL:SetInfo(tbl)
    self.Alpha = 0
    self:LerpAlpha(255, 0.15)

    local item = XeninInventory:GetItem(tbl.dropEnt)
    local name = item and item:GetName(tbl)
    local data = tbl.data
    local rarity = XeninInventory:GetRarity(tbl)

    self.title = name
    self.rarity = rarity
    local cat = XeninInventory.Config.Categories[rarity]
    if cat then
      self.cat = cat
    end

    self.desc = isstring(item.Description) and item.Description or isfunction(item.Description) and item:Description(tbl, self.parent)
  end

  function PANEL:Paint(w, h)
    local aX, aY = self:LocalToScreen()
    BSHADOWS.BeginShadow()
    draw.RoundedBox(6, aX, aY, w, h, XeninUI.Theme.Primary)
    BSHADOWS.EndShadow(1, 2, 2)

    local y = 6
    local x = 8
    XeninUI:DrawShadowText(self.title, "XeninInventory.Hover.Title", x, y, self.cat and self.cat.color or color_white, TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 1, 125)
    y = y + draw.GetFontHeight("XeninInventory.Hover.Title")

    if isstring(self.desc) then
      XeninUI:DrawShadowText(self.desc, "XeninInventory.Hover.Subtitle", x, y, Color(182, 182, 182), TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 1, 100)
    else
      for i, v in ipairs(self.desc or {}) do
        local str = "No string"
        local font = "XeninInventory.Hover.Subtitle"
        local color = Color(182, 182, 182)
        local space = 0

        if istable(v) then
          str = v.str or "No string"
          font = v.font or "XeninInventory.Hover.Subtitle"
          color = v.color or Color(182, 182, 182)
          space = v.space or 0
        else
          str = v
        end

        surface.SetFont(font)
        local tw, th = surface.GetTextSize(str)

        XeninUI:DrawShadowText(str, font, x, y, color, TEXT_ALIGN_LEFT, TEXT_ALIGN_TOP, 1, 100)

        y = y + th + space
      end
    end
  end

  function PANEL:PerformLayout(w, h)
    surface.SetFont("XeninInventory.Hover.Title")
    local tw, th = surface.GetTextSize(self.title or "")
    local width = tw + 16
    local height = 16 + th

    if isstring(self.desc) then
      surface.SetFont("XeninInventory.Hover.Subtitle")
      local tw, th = surface.GetTextSize(self.desc)
      width = math.max(width, tw + 16)
      height = height + th
    else
      for i, v in ipairs(self.desc or {}) do
        local str = "No string"
        local font = "XeninInventory.Hover.Subtitle"
        local color = Color(182, 182, 182)
        local space = 0

        if istable(v) then
          str = v.str or "No string"
          font = v.font or "XeninInventory.Hover.Subtitle"
          color = v.color or Color(182, 182, 182)
          space = v.space or 0
        else
          str = v
        end

        surface.SetFont(font)
        local tw, th = surface.GetTextSize(str)
        width = math.max(width, tw + 16)
        height = height + th + space
      end
    end

    self:SetSize(width, height)
  end

  vgui.Register("XeninInventory.Hover.V2", PANEL)
end

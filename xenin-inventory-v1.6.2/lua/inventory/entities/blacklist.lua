--[[
This code was generated by LAUX, a Lua transpiler
LAUX is a fork of LAU with additional changes.

More info & source code can be found at: https://gitlab.com/sleeppyy/laux
]]

XeninInventory.Blacklist = XeninInventory.Blacklist || {}
local Blacklist
do
  local _class_0
  local _parent_0 = XeninUI.Configurator.Entity
  local _base_0 = {
    __name = "Blacklist",
    __base = XeninUI.Configurator.Entity.__base,
    onSave = function(self)
      local id = self:getId()
      if (!id) then return end

      XeninInventory.Blacklist[id] = self
    end,
    onDelete = function(self)
      local id = self:getId()
      if (!id) then return end

      XeninInventory.Blacklist[id] = nil
    end,
    __type = function(self)
      return "XeninUI.Configurator.Entity"end
  }
  _base_0.__index = _base_0
  setmetatable(_base_0, _parent_0.__index)
  _class_0 = setmetatable({
    __init = function(self)
      Blacklist.__parent.__init(self)

      self:setDatabaseEntity("XeninInventory.Blacklist")

      self:addColumn("id", {
        type = "string",
        primary = true,
        length = 255,
        readOnly = true,
        isName = true
      })
    end,
    __base = _base_0,
    __parent = _parent_0,
    getAllEntities = function()
      return XeninInventory.Blacklist end,
    getGridContent = function()
      local tbl = table.Copy(weapons.GetList())
      for i, v in pairs(scripted_ents.GetList()) do
        if (v.t.ClassName:lower():find("base")) then continue end

        table.insert(tbl, v.t)
      end

      table.sort(tbl, function(a, b)
        return (a.PrintName or a.ClassName) < (b.PrintName or b.ClassName)
      end)

      return tbl
    end,
    selectRowString = "Select A Weapon/Entity",
    getListView = function(entity, isList)
      local id = entity:getId()
      local wep = weapons.Get(id)
      if wep then
        return {
          display = wep.WorldModel,
          title = wep.PrintName,
          subtitle = wep.ClassName,
          entClass = wep.ClassName
        }
      end
      local ent = scripted_ents.Get(id)
      if ent then
        return {
          title = ent.PrintName,
          subtitle = ent.ClassName,
          entClass = ent.ClassName
        }
      end
    end,
    getGridData = function(tbl)
      if (!tbl.PrintName) then return end

      return {
      entClass = tbl.ClassName
      }
    end,
    gridSetDefaultData = function(entity, data, index)
      entity:setId(data.entClass)
    end
  }, {
    __index = function(cls, parent)
      local val = rawget(_base_0, parent)
      if val == nil then local _parent = rawget(cls, "__parent")
        if _parent then return _parent[parent]
        end
      else
        return val
      end
    end,
    __call = function(cls, ...)
      local _self_0 = setmetatable({}, _base_0)
      cls.__init(_self_0, ...)
      return _self_0
    end
  })
  if _parent_0.__inherited then _parent_0.__inherited(_parent_0, _class_0)
  end
  Blacklist = _class_0
end

Blacklist.register("XeninInventory.Blacklist", Blacklist)
